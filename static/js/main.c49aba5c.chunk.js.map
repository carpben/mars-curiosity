{"version":3,"sources":["curiosity/tools/CuriosityPage.ts","general/styles.ts","general/components/Button.tsx","curiosity/components/CuriosityButton.tsx","curiosity/components/H1.tsx","curiosity/tools/curiosityInfo.ts","curiosity/pages/about/imageAbout.tsx","weatherAPI.ts","curiosity/components/Chevron.tsx","curiosity/tools/curiosityStyles.ts","general/utils/fetch.ts","general/utils/array.ts","general/utils/numbers.ts","curiosity/tools/requests.ts","curiosity/tools/useSearchPhotos.ts","curiosity/pages/about/Carousel.tsx","curiosity/pages/about/About.tsx","curiosity/components/PaginationButton.tsx","curiosity/components/Pagination.tsx","curiosity/pages/imagesPage/DateInput.tsx","curiosity/pages/imagesPage/ImagesPage.tsx","general/components/SelectW.tsx","general/utils/inputs.ts","curiosity/tools/useSearchWeather.ts","curiosity/pages/weatherPage/WeatherStat.tsx","curiosity/pages/weatherPage/WeatherCard.tsx","curiosity/pages/weatherPage/WeatherPage.tsx","curiosity/tools/url.ts","general/componentLifecycle.ts","curiosity/index.tsx","reportWebVitals.ts","index.tsx"],"names":["CuriosityPage","styleInputNormalize","css","styleCenterChild","display","justifyContent","alignItems","Button","props","handler","stl","otherProps","onClick","style","cursor","fontSize","CuriosityButton","backgroundColor","padding","borderRadius","fontWeight","marginBottom","H1","curiosityInfParagraphs","WEATHER_METRIC","aboutImage","background","backgroundSize","backgroundPosition","marginRight","flex","position","top","left","right","textAlign","Chevron","size","direction","border","rotate","width","height","borderTop","borderRight","transform","curiosityStyles","imageGrid","gridTemplateColumns","gap","primaryColor","axiosFetch","config","a","axios","res","data","getArr","length","func","Array","from","map","_","i","reliablyGetKeys","Object","keys","getRandomInRange","min","max","Math","random","roundDigits","num","digits","multiplier","round","getWeatherStat","sol","cycle","range","actualMin","av","sol200","Date","getDateForSol","toISOString","weatherData","AT","HWS","PRE","First_UTC","Last_UTC","getDataForSol","console","log","queries","sort","page","resultsPerPage","firstIndex","lastIndex","solA","solB","slice","requestCuriosityPhotos","date","url","photos","initState","loading","format","subDays","useSearchPhotos","useImmer","state","setState","useEffect","draftSt","failed","request","setPage","newPage","setDate","newDate","Carousel","imageList","useState","color","firstImgIndex","maxImgIndex","imagesToShow","undefined","photo","src","img_src","marginLeft","floor","styleParagraph","lineHeight","marginTop","styleButtonsW","About","p","IMAGES","WEATHER","PaginationButton","Pagination","currentPage","selected","DateInput","searchByDate","initialDate","overflow","type","onChange","e","target","value","placeholder","paddingLeft","borderColor","ImagesPage","alt","id","SelectW","optionArr","handleSelect","selectedVal","currentTarget","getValFromSelectEvent","name","bottom","margin","weatherBySol","Tempreture","useSearchWeather","weatherAPI","asyncEffect","setSort","metric","WeatherStat","label","val","isNumber","WeatherCard","WeatherPage","weatherKey","wBS","history","createBrowserHistory","urlStateDefault","ABOUT","getUrlState","pick","qs","parse","location","search","ignoreQueryPrefix","arrayLimit","window","test","setUrl","urlState","push","stringify","addQueryPrefix","useUrlState","fun","setUrlState","listen","pages","values","styleContainer","maxWidth","styleNavigation","CuriosityMars","PAGES","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c49aba5c.chunk.js","sourcesContent":["export enum CuriosityPage {\r\n\tABOUT = \"ABOUT\",\r\n\tIMAGES = \"IMAGES\",\r\n\tWEATHER = \"WEATHER\",\r\n}\r\n","import { css } from \"@emotion/react\"\r\n\r\nexport const styleInputNormalize = css`\r\n\tpadding: unset;\r\n\tbackground-color: unset;\r\n\tborder: unset;\r\n\t:focus {\r\n\t\toutline: none;\r\n\t}\r\n`\r\n\r\nexport const styleCenterChild = css({\r\n\tdisplay: \"flex\",\r\n\tjustifyContent: \"center\",\r\n\talignItems: \"center\",\r\n})\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css, Interpolation, jsx, Theme } from \"@emotion/react\"\r\nimport { styleInputNormalize } from \"../styles\"\r\nimport { DRFC } from \"../types\"\r\n\r\ninterface Props {\r\n\thandler: () => unknown\r\n\tstl?: Interpolation<Theme>\r\n}\r\n\r\nexport const Button: DRFC<Props> = (props) => {\r\n\tconst { handler, stl, ...otherProps } = props\r\n\treturn <button onClick={handler} css={[style, stl]} {...otherProps} />\r\n}\r\n\r\nconst style = css(styleInputNormalize, { cursor: \"pointer\", fontSize: 16 })\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport { Button } from \"../../general/components/Button\"\r\nimport { DRFC } from \"../../general/types\"\r\n\r\ninterface Props {\r\n\thandler: () => unknown\r\n}\r\n\r\nconst CuriosityButton: DRFC<Props> = (props) => {\r\n\tconst { handler, ...otherProps } = props\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tstl={{\r\n\t\t\t\tbackgroundColor: \"#ded6c9\",\r\n\t\t\t\tpadding: 20,\r\n\t\t\t\tborderRadius: 12,\r\n\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\":hover, :focus\": {\r\n\t\t\t\t\tbackgroundColor: \"#bbb\",\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t\thandler={handler}\r\n\t\t\t{...otherProps}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default CuriosityButton\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css, jsx } from \"@emotion/react\"\r\nimport { DRFC } from \"../../general/types\"\r\n\r\nconst H1: DRFC<{}> = (props) => {\r\n\treturn <h1 css={style} {...props} />\r\n}\r\n\r\nconst style = css({\r\n\tfontWeight: \"bolder\",\r\n\tfontSize: 38,\r\n\tmarginBottom: 20,\r\n})\r\n\r\nexport default H1\r\n","export const curiosityInfParagraphs = [\r\n\t\"Part of NASA's Mars Science Laboratory mission, Curiosity is the largest and most capable rover ever sent to Mars. It launched November 26, 2011 and landed on Mars at 10:32 p.m. PDT on Aug. 5, 2012 (1:32 a.m. EDT on Aug. 6, 2012).\",\r\n\t\"Curiosity set out to answer the question: Did Mars ever have the right environmental conditions to support small life forms called microbes? Early in its mission, Curiosity's scientific tools found chemical and mineral evidence of past habitable environments on Mars. It continues to explore the rock record from a time when Mars could have been home to microbial life.\",\r\n\t\"Curiosity explores Gale Crater and acquires rock, soil, and air samples for onboard analysis. The car-size rover is about as tall as a basketball player and uses a 7 foot-long arm to place tools close to rocks selected for study. Curiosity's large size allows it to carry an advanced kit of 10 science instruments. It has tools including 17 cameras, a laser to vaporize and study small pinpoint spots of rocks at a distance.\",\r\n]\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\n\r\nconst aboutImage = (\r\n\t<div\r\n\t\tcss={{\r\n\t\t\tbackground: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(https://mars.nasa.gov/internal_resources/585)`,\r\n\t\t\tbackgroundSize: \"cover\",\r\n\t\t\tbackgroundPosition: \"center\",\r\n\t\t\tmarginRight: 20,\r\n\t\t\tflex: 9,\r\n\t\t\tposition: \"relative\",\r\n\t\t}}\r\n\t>\r\n\t\t<div\r\n\t\t\tcss={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\ttop: \"100%\",\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\tCuriosity rover image\r\n\t\t</div>\r\n\t</div>\r\n)\r\n\r\nexport default aboutImage\r\n","/** now: SOL 200 */\r\n\r\nimport { format } from \"date-fns\"\r\nimport { range } from \"lodash\"\r\nimport { getArr } from \"./general/utils/array\"\r\nimport { getRandomInRange } from \"./general/utils/numbers\"\r\n\r\nexport enum WEATHER_METRIC {\r\n\tTempreture = \"AT\",\r\n\tWind = \"HWS\",\r\n\tPressure = \"PRE\",\r\n}\r\n\r\ninterface WeatherStat {\r\n\tav: number\r\n}\r\n\r\nexport interface SolWeatherData {\r\n\tAT: WeatherStat\r\n\tHWS: WeatherStat\r\n\tPRE: WeatherStat\r\n\tFirst_UTC: string\r\n\tLast_UTC: string\r\n\tsol: number\r\n}\r\n\r\nconst getWeatherStat = (sol: number, min: number, cycle: number, range: number): WeatherStat => {\r\n\tconst actualMin = min + (sol % cycle)\r\n\treturn {\r\n\t\tav: getRandomInRange(actualMin, actualMin + range),\r\n\t}\r\n}\r\n\r\nconst sol200 = new Date()\r\n\r\nconst getDateForSol = (sol: number) => sol200.toISOString()\r\n\r\nconst getDataForSol = (i: number): SolWeatherData => {\r\n\tconst sol = i + 1\r\n\treturn {\r\n\t\tAT: getWeatherStat(sol, -100, 100, 80),\r\n\t\tHWS: getWeatherStat(sol, 0.15, 10, 17),\r\n\t\tPRE: getWeatherStat(sol, 722, 40, 40),\r\n\t\tFirst_UTC: getDateForSol(0),\r\n\t\tLast_UTC: getDateForSol(0),\r\n\t\tsol,\r\n\t}\r\n}\r\n\r\nconst weatherData = getArr(200, (i) => getDataForSol(i))\r\n\r\nconsole.log(weatherData)\r\n\r\nexport interface WeatherQueries {\r\n\tsort: WEATHER_METRIC\r\n\tpage: number\r\n\tresultsPerPage: number\r\n}\r\n\r\nexport const getWeatherData = (queries: WeatherQueries) => {\r\n\tconst { sort, page, resultsPerPage } = queries\r\n\tconst sortedData = weatherData.sort((solA, solB) => solB[sort].av - solA[sort].av)\r\n\tconst firstIndex = (page - 1) * resultsPerPage\r\n\tconst lastIndex = page * resultsPerPage\r\n\treturn sortedData.slice(firstIndex, lastIndex)\r\n}\r\n\r\nexport default {\r\n\tget: getWeatherData,\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport { size } from \"lodash\"\r\nimport { DRFC } from \"../../general/types\"\r\n\r\ninterface Props {\r\n\tsize?: number\r\n\tdirection: \"right\" | \"left\" | \"down\"\r\n}\r\n\r\nconst Chevron: DRFC<Props> = (props) => {\r\n\tconst { size = 10, direction, ...otherProps } = props\r\n\tconst border = `${size / 4}px solid #666`\r\n\r\n\tconst rotate = direction === \"down\" ? 135 : direction === \"right\" ? 45 : -135\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={{\r\n\t\t\t\twidth: size,\r\n\t\t\t\theight: size,\r\n\t\t\t\tposition: \"relative\",\r\n\t\t\t\tborderTop: border,\r\n\t\t\t\tborderRight: border,\r\n\t\t\t\ttransform: `rotate(${rotate}deg)`,\r\n\t\t\t\tleft: direction === \"left\" ? size / 4 : direction === \"right\" ? -size / 4 : 0,\r\n\t\t\t}}\r\n\t\t\t{...otherProps}\r\n\t\t>\r\n\t\t\t{/* <div\r\n                css={{\r\n                    position: \"absolute\"\r\n                }}\r\n            >\r\n\r\n            </div> */}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chevron\r\n","import { css } from \"@emotion/react\"\r\n\r\nconst curiosityStyles = {\r\n\timageGrid: css({\r\n\t\tdisplay: \"grid\",\r\n\t\tgridTemplateColumns: \"repeat(5, 1fr)\",\r\n\t\tgap: 20,\r\n\t}),\r\n\tprimaryColor: \"#8D6338\",\r\n}\r\n\r\nexport default curiosityStyles\r\n","import axios, { AxiosRequestConfig } from \"axios\"\r\n\r\nexport const axiosFetch = async <T>(config: AxiosRequestConfig): Promise<T> => {\r\n\tconst res = await axios(config)\r\n\treturn res.data\r\n}\r\n","export const getArr = <T extends object>(length: number, func: (i: number) => T): T[] =>\r\n\tArray.from(new Array(length)).map((_, i) => func(i))\r\n\r\nexport const reliablyGetKeys = Object.keys as <T extends object>(obj: T) => Array<keyof T>\r\n","export const getRandomInRange = (min: number, max: number): number => {\r\n\treturn Math.random() * (max - min + 1) + min\r\n}\r\n\r\nexport const roundDigits = (num: number, digits: number): number => {\r\n\tconst multiplier = 10 ** digits\r\n\treturn Math.round(multiplier * num) / multiplier\r\n}\r\n\r\nexport const round2Dec = (num: number) => roundDigits(num, 2)\r\nexport const round4Dec = (num: number) => roundDigits(num, 4)\r\n","import axios from \"axios\"\r\nimport { format, subDays } from \"date-fns\"\r\nimport { now } from \"lodash\"\r\nimport { axiosFetch } from \"../../general/utils/fetch\"\r\nimport weatherAPI, { WeatherQueries } from \"../../weatherAPI\"\r\nimport { Photo } from \"./types\"\r\n\r\nconst API_KEY = \"qLPoCxviAALdxi5RLgnbwC9k1o07UEQv1o5b7nMu\"\r\n\r\ninterface PhotosData {\r\n\tphotos: Photo[]\r\n}\r\n\r\ninterface ImageQuery {\r\n\tdate: string\r\n\tpage: number\r\n}\r\n\r\nexport const requestCuriosityPhotos = async ({ date, page }: ImageQuery) => {\r\n\tconst data = await axiosFetch<PhotosData>({\r\n\t\turl: `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=${date}&api_key=${API_KEY}&page=${page}`,\r\n\t})\r\n\treturn data.photos\r\n}\r\n\r\nexport const requestCuriosityWeather = (queries: WeatherQueries) => weatherAPI.get(queries)\r\n","import { queries } from \"@testing-library/react\"\r\nimport { format, subDays } from \"date-fns\"\r\nimport { now } from \"lodash\"\r\nimport { useEffect } from \"react\"\r\nimport { useImmer } from \"use-immer\"\r\nimport { requestCuriosityPhotos } from \"./requests\"\r\nimport { Photo } from \"./types\"\r\n\r\nexport interface ImagesState {\r\n\tphotos: Photo[]\r\n\tfailed?: boolean\r\n\tloading: boolean\r\n\tqueries: {\r\n\t\tpage: number\r\n\t\tdate: string\r\n\t}\r\n}\r\n\r\nconst DATE_FORMAT = \"yyyy-MM-dd\"\r\n\r\nconst initState: ImagesState = {\r\n\tphotos: [],\r\n\tloading: true,\r\n\tqueries: {\r\n\t\tpage: 1,\r\n\t\tdate: format(subDays(new Date(), 2), DATE_FORMAT),\r\n\t},\r\n}\r\n\r\nconst useSearchPhotos = () => {\r\n\tconst [state, setState] = useImmer<ImagesState>(initState)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst request = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetState((draftSt) => {\r\n\t\t\t\t\tdraftSt.loading = true\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst photos = await requestCuriosityPhotos(state.queries)\r\n\t\t\t\tsetState((draftSt) => {\r\n\t\t\t\t\tdraftSt.photos = photos\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetState((draftSt) => {\r\n\t\t\t\t\tdraftSt.failed = true\r\n\t\t\t\t})\r\n\t\t\t} finally {\r\n\t\t\t\tsetState((draftSt) => {\r\n\t\t\t\t\tdraftSt.loading = false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trequest()\r\n\t}, [state.queries])\r\n\r\n\tconsole.log(state.queries)\r\n\r\n\tconst setPage = (newPage: number) =>\r\n\t\tsetState((draftSt) => {\r\n\t\t\tdraftSt.queries.page = newPage\r\n\t\t})\r\n\r\n\tconst setDate = (newDate: string) =>\r\n\t\tsetState((draftSt) => {\r\n\t\t\tdraftSt.queries.date = newDate\r\n\t\t})\r\n\r\n\treturn {\r\n\t\tstate,\r\n\t\tsetPage,\r\n\t\tsetDate,\r\n\t}\r\n}\r\n\r\nexport default useSearchPhotos\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport { useState } from \"react\"\r\nimport { useImmer } from \"use-immer\"\r\nimport { useMountEffect } from \"../../../general/componentLifecycle\"\r\nimport { Button } from \"../../../general/components/Button\"\r\nimport { DRFC } from \"../../../general/types\"\r\nimport Chevron from \"../../components/Chevron\"\r\nimport curiosityStyles from \"../../tools/curiosityStyles\"\r\nimport { requestCuriosityPhotos } from \"../../tools/requests\"\r\nimport useSearchPhotos from \"../../tools/useSearchPhotos\"\r\n\r\nconst Carousel: DRFC = () => {\r\n\tconst {\r\n\t\tstate: { photos: imageList, failed },\r\n\t} = useSearchPhotos()\r\n\tconst [page, setPage] = useState(1)\r\n\r\n\tif (failed) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tFailed to fetch images{\" \"}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst firstImgIndex = (page - 1) * 5\r\n\tconst maxImgIndex = firstImgIndex + 5\r\n\r\n\tconst imagesToShow = imageList?.slice(firstImgIndex, maxImgIndex)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tfontSize: 27,\r\n\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tCuriosity rover images{\" \"}\r\n\t\t\t\t<span\r\n\t\t\t\t\tcss={{\r\n\t\t\t\t\t\tcolor: curiosityStyles.primaryColor,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tfrom today\r\n\t\t\t\t</span>\r\n\t\t\t</h2>\r\n\r\n\t\t\t{imageList != undefined && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tcss={{\r\n\t\t\t\t\t\t\theight: 200,\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{page > 1 && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tstl={{\r\n\t\t\t\t\t\t\t\t\tfontSize: 40,\r\n\t\t\t\t\t\t\t\t\tmarginRight: 30,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\thandler={() => setPage(page - 1)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Chevron size={15} direction=\"left\" />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div css={curiosityStyles.imageGrid}>\r\n\t\t\t\t\t\t\t{imagesToShow!.map((photo) => (\r\n\t\t\t\t\t\t\t\t<img src={photo.img_src} css={{ width: \"100%\" }} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{imageList?.length - 1 > maxImgIndex && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tstl={{\r\n\t\t\t\t\t\t\t\t\tfontSize: 40,\r\n\t\t\t\t\t\t\t\t\tmarginLeft: 30,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\thandler={() => setPage(page + 1)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Chevron direction=\"right\" size={25} />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{page} / {Math.floor(imageList?.length / 5)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Carousel\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css, jsx } from \"@emotion/react\"\r\nimport { useState } from \"react\"\r\nimport { DRFC } from \"../../../general/types\"\r\nimport CuriosityButton from \"../../components/CuriosityButton\"\r\nimport H1 from \"../../components/H1\"\r\nimport { curiosityInfParagraphs } from \"../../tools/curiosityInfo\"\r\nimport { CuriosityPage } from \"../../tools/CuriosityPage\"\r\nimport { Photo } from \"../../tools/types\"\r\nimport aboutImage from \"./imageAbout\"\r\nimport Carousel from \"./Carousel\"\r\n\r\ninterface Props {\r\n\tsetPage: (page: CuriosityPage) => unknown\r\n}\r\n\r\nconst About: DRFC<Props> = (props) => {\r\n\tconst { setPage } = props\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<H1>About The Program</H1>\r\n\t\t\t<div\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tmarginBottom: 70,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{aboutImage}\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tcss={{\r\n\t\t\t\t\t\tflex: 11,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{curiosityInfParagraphs.map((p) => (\r\n\t\t\t\t\t\t<p css={styleParagraph}>{p}</p>\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t<div css={styleButtonsW}>\r\n\t\t\t\t\t\t<CuriosityButton handler={() => setPage(CuriosityPage.IMAGES)} css={{ marginRight: 20 }}>\r\n\t\t\t\t\t\t\tView Images by Date\r\n\t\t\t\t\t\t</CuriosityButton>\r\n\t\t\t\t\t\t<CuriosityButton handler={() => setPage(CuriosityPage.WEATHER)}>\r\n\t\t\t\t\t\t\tView Weather\r\n\t\t\t\t\t\t</CuriosityButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Carousel />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst styleParagraph = css({\r\n\t// fontSize: 18,\r\n\tlineHeight: 1.25,\r\n\tmarginTop: 0,\r\n\tfontWeight: 500,\r\n\tmarginBottom: 0,\r\n})\r\n\r\nconst styleButtonsW = css({\r\n\tmarginTop: 35,\r\n})\r\n\r\nexport default About\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css, jsx } from \"@emotion/react\"\r\nimport { Button } from \"../../general/components/Button\"\r\nimport { styleCenterChild } from \"../../general/styles\"\r\nimport { DRFC } from \"../../general/types\"\r\n\r\ninterface Props {\r\n\thandler: () => unknown\r\n}\r\n\r\nconst PaginationButton: DRFC<Props> = (props) => {\r\n\tconst { handler, ...otherProps } = props\r\n\r\n\treturn <Button css={[style, styleCenterChild]} handler={handler} {...otherProps} />\r\n}\r\n\r\nconst WIDTH = 32\r\n\r\nconst style = css({\r\n\tborder: \"1px solid #ddd\",\r\n\twidth: WIDTH,\r\n\theight: WIDTH,\r\n\tmarginLeft: 10,\r\n\tfontSize: 14,\r\n\tborderRadius: 8,\r\n})\r\n\r\nexport default PaginationButton\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport { Button } from \"../../general/components/Button\"\r\nimport { styleCenterChild } from \"../../general/styles\"\r\nimport { DRFC } from \"../../general/types\"\r\nimport { getArr } from \"../../general/utils/array\"\r\nimport curiosityStyles from \"../tools/curiosityStyles\"\r\nimport Chevron from \"./Chevron\"\r\nimport PaginationButton from \"./PaginationButton\"\r\n\r\ninterface Props {\r\n\tsetPage: (page: number) => unknown\r\n\tcurrentPage: number\r\n}\r\n\r\nconst Pagination: DRFC<Props> = (props) => {\r\n\tconst { currentPage, setPage } = props\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\tjustifyContent: \"flex-end\",\r\n\t\t\t\tmarginTop: 15,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<PaginationButton handler={() => setPage(currentPage - 1)} css={styleCenterChild}>\r\n\t\t\t\t<Chevron size={7} direction=\"left\" />\r\n\t\t\t</PaginationButton>\r\n\t\t\t{getArr(9, (i) => {\r\n\t\t\t\tconst page = i + 1\r\n\t\t\t\tconst selected = currentPage === page\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<PaginationButton\r\n\t\t\t\t\t\thandler={() => setPage(page)}\r\n\t\t\t\t\t\tcss={{\r\n\t\t\t\t\t\t\tbackgroundColor: selected ? curiosityStyles.primaryColor : \"unset\",\r\n\t\t\t\t\t\t\tcolor: selected ? \"white\" : \"#666\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{page}\r\n\t\t\t\t\t</PaginationButton>\r\n\t\t\t\t\t// <Button\r\n\t\t\t\t\t// \tcss={{\r\n\t\t\t\t\t// \t\tborder: \"1px solid #ddd\",\r\n\t\t\t\t\t// \t\tpadding: 10,\r\n\t\t\t\t\t// \t}}\r\n\t\t\t\t\t// >\r\n\t\t\t\t\t// \t{page}\r\n\t\t\t\t\t// </Button>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t<PaginationButton handler={() => setPage(currentPage + 1)} css={styleCenterChild}>\r\n\t\t\t\t<Chevron size={7} direction=\"right\" />\r\n\t\t\t</PaginationButton>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Pagination\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport { useState } from \"react\"\r\nimport { Button } from \"../../../general/components/Button\"\r\nimport { styleInputNormalize } from \"../../../general/styles\"\r\nimport { DRFC } from \"../../../general/types\"\r\n\r\ninterface Props {\r\n\tsearchByDate: (date: string) => unknown\r\n\tinitialDate: string\r\n}\r\n\r\nconst DateInput: DRFC<Props> = (props) => {\r\n\tconst { searchByDate, initialDate } = props\r\n\tconst [date, setDate] = useState<string>(initialDate)\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\talignItems: \"center\",\r\n\t\t\t\tmarginBottom: 20,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<label\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\tmarginRight: 10,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tEarth date:\r\n\t\t\t</label>\r\n\r\n\t\t\t<div\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tborder: \"1px solid #ccc\",\r\n\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n\t\t\t\t\tplaceholder=\"Please enter \"\r\n\t\t\t\t\tcss={[\r\n\t\t\t\t\t\tstyleInputNormalize,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmarginRight: 10,\r\n\t\t\t\t\t\t\tpadding: 4,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tvalue={date}\r\n\t\t\t\t></input>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\thandler={() => {\r\n\t\t\t\t\t\tif (!date) {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsearchByDate(date)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstl={{\r\n\t\t\t\t\t\tbackgroundColor: \"#ccc\",\r\n\t\t\t\t\t\tpadding: 6,\r\n\t\t\t\t\t\tpaddingLeft: 8,\r\n\t\t\t\t\t\tborderColor: \"#ccc\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tSearch\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DateInput\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport { Button } from \"../../../general/components/Button\"\r\nimport { DRFC } from \"../../../general/types\"\r\nimport { getArr } from \"../../../general/utils/array\"\r\nimport H1 from \"../../components/H1\"\r\nimport Pagination from \"../../components/Pagination\"\r\nimport curiosityStyles from \"../../tools/curiosityStyles\"\r\nimport useSearchPhotos from \"../../tools/useSearchPhotos\"\r\nimport DateInput from \"./DateInput\"\r\n\r\ninterface Props {}\r\n\r\nconst ImagesPage: DRFC<{}> = (props) => {\r\n\tconst {} = props\r\n\r\n\tconst {\r\n\t\tsetDate,\r\n\t\tsetPage,\r\n\t\tstate: { photos: imageList, queries },\r\n\t} = useSearchPhotos()\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<H1>Mars Images By Date</H1>\r\n\r\n\t\t\t<DateInput searchByDate={setDate} initialDate={queries.date} key={queries.date} />\r\n\t\t\t<div css={curiosityStyles.imageGrid}>\r\n\t\t\t\t{imageList.map((photo) => (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={photo.img_src}\r\n\t\t\t\t\t\tcss={{\r\n\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tkey={photo.id}\r\n\t\t\t\t\t\talt=\"Taken by Curiosity Rover on Mars\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Pagination currentPage={queries.page} setPage={setPage} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ImagesPage\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css, jsx } from \"@emotion/react\"\r\nimport { ChangeEvent, useState } from \"react\"\r\n\r\nimport { DRFC } from \"../types\"\r\nimport Chevron from \"../../curiosity/components/Chevron\"\r\nimport { styleCenterChild, styleInputNormalize } from \"../styles\"\r\nimport { getValFromSelectEvent } from \"../utils/inputs\"\r\n\r\ninterface IProps {\r\n\toptionArr: Array<{\r\n\t\tname: string\r\n\t\tid: string\r\n\t}>\r\n\tselectedVal: string\r\n\thandleSelect: (id: string) => unknown\r\n}\r\n\r\nconst SelectW: DRFC<IProps> = (props) => {\r\n\tconst { optionArr, handleSelect, selectedVal } = props\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={{\r\n\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\tposition: \"relative\",\r\n\t\t\t\tborder: \"1px solid #ccc \",\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\tborderRadius: 5,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<select\r\n\t\t\t\tvalue={selectedVal}\r\n\t\t\t\tonChange={(e: ChangeEvent<HTMLSelectElement>) => handleSelect(getValFromSelectEvent(e))}\r\n\t\t\t\tcss={[\r\n\t\t\t\t\tstyleInputNormalize,\r\n\t\t\t\t\tcss`\r\n\t\t\t\t\t\tpadding: 5px;\r\n\t\t\t\t\t\tmax-width: 100%;\r\n\t\t\t\t\t\tpadding-right: 32px;\r\n\t\t\t\t\t\tappearance: none;\r\n\t\t\t\t\t\tposition: relative;\r\n\t\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\t\tpadding-left: 10px;\r\n\t\t\t\t\t`,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t{optionArr.map(({ id, name }) => (\r\n\t\t\t\t\t<option value={id} key={id}>\r\n\t\t\t\t\t\t{name}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</select>\r\n\t\t\t<div\r\n\t\t\t\tcss={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twidth: 32,\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tright: 0,\r\n\t\t\t\t\t\tbottom: 3,\r\n\t\t\t\t\t\tmargin: \"auto\",\r\n\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstyleCenterChild,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Chevron direction=\"down\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SelectW\r\n","import { ChangeEvent } from \"react\"\r\n\r\nexport const getValFromEvent = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => e.target.value\r\n\r\nexport const getValFromSelectEvent = (e: ChangeEvent<HTMLSelectElement>) => e.currentTarget.value\r\n","import { queries } from \"@testing-library/react\"\r\nimport { format, subDays } from \"date-fns\"\r\nimport { now } from \"lodash\"\r\nimport { useEffect } from \"react\"\r\nimport { useImmer } from \"use-immer\"\r\nimport weatherAPI, { SolWeatherData, WeatherQueries, WEATHER_METRIC } from \"../../weatherAPI\"\r\nimport { requestCuriosityPhotos, requestCuriosityWeather } from \"./requests\"\r\nimport { Photo } from \"./types\"\r\n\r\nexport interface WeatherState {\r\n\tweatherBySol: SolWeatherData[]\r\n\tfailed?: boolean\r\n\tloading: boolean\r\n\tqueries: WeatherQueries\r\n}\r\n\r\nconst initState: WeatherState = {\r\n\tweatherBySol: [],\r\n\tloading: true,\r\n\tqueries: {\r\n\t\tpage: 1,\r\n\t\tresultsPerPage: 9,\r\n\t\tsort: WEATHER_METRIC.Tempreture,\r\n\t},\r\n}\r\n\r\nconst useSearchWeather = () => {\r\n\tconst [state, setState] = useImmer<WeatherState>(initState)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst asyncEffect = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetState((draftSt) => {\r\n\t\t\t\t\tdraftSt.loading = true\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst weatherBySol = await requestCuriosityWeather(state.queries)\r\n\t\t\t\tsetState((draftSt) => {\r\n\t\t\t\t\tdraftSt.weatherBySol = weatherBySol\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetState((draftSt) => {\r\n\t\t\t\t\tdraftSt.failed = true\r\n\t\t\t\t})\r\n\t\t\t} finally {\r\n\t\t\t\tsetState((draftSt) => {\r\n\t\t\t\t\tdraftSt.loading = false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tasyncEffect()\r\n\t}, [state.queries])\r\n\r\n\tconst setPage = (newPage: number) =>\r\n\t\tsetState((draftSt) => {\r\n\t\t\tdraftSt.queries.page = newPage\r\n\t\t})\r\n\r\n\tconst setSort = (metric: WEATHER_METRIC) =>\r\n\t\tsetState((draftSt) => {\r\n\t\t\tdraftSt.queries.sort = metric\r\n\t\t})\r\n\r\n\treturn {\r\n\t\tstate,\r\n\t\tsetPage,\r\n\t\tsetSort,\r\n\t}\r\n}\r\n\r\nexport default useSearchWeather\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport { isNumber } from \"lodash\"\r\nimport { ReactText } from \"react\"\r\nimport { DRFC } from \"../../../general/types\"\r\nimport { round2Dec } from \"../../../general/utils/numbers\"\r\n\r\ninterface Props {\r\n\tlabel: string\r\n\tval: ReactText\r\n}\r\n\r\nconst WeatherStat: DRFC<Props> = (props) => {\r\n\tconst { label, val } = props\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\tmarginBottom: 10,\r\n\t\t\t\tfontSize: 18,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tfontWeight: \"bolder\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{label}:\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{isNumber(val) ? round2Dec(val) : val}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default WeatherStat\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport { DRFC } from \"../../../general/types\"\r\nimport { SolWeatherData } from \"../../../weatherAPI\"\r\nimport WeatherStat from \"./WeatherStat\"\r\n\r\nconst WeatherCard: DRFC<SolWeatherData> = (props) => {\r\n\tconst { First_UTC, Last_UTC, AT, HWS, PRE, sol, ...otherProps } = props\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={{\r\n\t\t\t\tborder: \"1px solid black\",\r\n\t\t\t\tpadding: 17,\r\n\t\t\t}}\r\n\t\t\t{...otherProps}\r\n\t\t>\r\n\t\t\t<WeatherStat label=\"Data point\" val={sol} />\r\n\t\t\t<WeatherStat label=\"Tempreture[AVG]\" val={AT.av} />\r\n\t\t\t<WeatherStat label=\"Wind[AVG]\" val={HWS.av} />\r\n\t\t\t<WeatherStat label=\"Pressure[AVG]\" val={PRE.av} />\r\n\t\t\t<WeatherStat label=\"First UTC\" val={First_UTC} />\r\n\t\t\t<WeatherStat label=\"Last UTC\" val={Last_UTC} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default WeatherCard\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport SelectW from \"../../../general/components/SelectW\"\r\nimport { DRFC } from \"../../../general/types\"\r\nimport { reliablyGetKeys } from \"../../../general/utils/array\"\r\nimport { WEATHER_METRIC } from \"../../../weatherAPI\"\r\nimport H1 from \"../../components/H1\"\r\nimport Pagination from \"../../components/Pagination\"\r\nimport useSearchWeather from \"../../tools/useSearchWeather\"\r\nimport WeatherCard from \"./WeatherCard\"\r\n\r\nconst WeatherPage: DRFC = (props) => {\r\n\tconst {\r\n\t\tstate: { queries, weatherBySol },\r\n\t\tsetPage,\r\n\t\tsetSort,\r\n\t} = useSearchWeather()\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\talignItems: \"baseline\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<H1>Mars Weather</H1>\r\n\t\t\t\t<div\r\n\t\t\t\t\tcss={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tcss={{\r\n\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t\t\tmarginRight: 25,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSort By\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<SelectW\r\n\t\t\t\t\t\thandleSelect={(val: string) => setSort(val as WEATHER_METRIC)}\r\n\t\t\t\t\t\tselectedVal={queries.sort}\r\n\t\t\t\t\t\toptionArr={reliablyGetKeys(WEATHER_METRIC).map((weatherKey) => ({\r\n\t\t\t\t\t\t\tid: WEATHER_METRIC[weatherKey],\r\n\t\t\t\t\t\t\tname: weatherKey,\r\n\t\t\t\t\t\t}))}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\t\tgridTemplateColumns: \"repeat(3, 1fr)\",\r\n\t\t\t\t\tgap: 30,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{weatherBySol.map((wBS) => (\r\n\t\t\t\t\t<WeatherCard {...wBS} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Pagination currentPage={queries.page} setPage={setPage} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default WeatherPage\r\n","import { createBrowserHistory } from \"history\"\r\nimport { pick } from \"lodash\"\r\nimport qs from \"qs\"\r\nimport { useState } from \"react\"\r\nimport { useMountEffect } from \"../../general/componentLifecycle\"\r\nimport { QueryObj } from \"../../general/types\"\r\nimport { CuriosityPage } from \"./CuriosityPage\"\r\n\r\nexport const history = createBrowserHistory()\r\n\r\ninterface UrlState {\r\n\tpage: CuriosityPage\r\n}\r\n\r\nconst urlStateDefault = {\r\n\tpage: CuriosityPage.ABOUT,\r\n}\r\n\r\nexport const getUrlQueryObj = () =>\r\n\tqs.parse(history.location.search, {\r\n\t\tignoreQueryPrefix: true,\r\n\t\tarrayLimit: 40,\r\n\t})\r\n\r\nconst getUrlState = () => ({ ...urlStateDefault, ...pick(getUrlQueryObj(), Object.keys(urlStateDefault)) })\r\n//@ts-ignore\r\nwindow.test = getUrlState\r\n\r\nconst setUrl = (urlState: UrlState) => {\r\n\thistory.push({\r\n\t\tsearch: qs.stringify(urlState, {\r\n\t\t\taddQueryPrefix: true,\r\n\t\t}),\r\n\t})\r\n}\r\n\r\nexport const useUrlState = () => {\r\n\tconst [urlState, setUrlState] = useState(getUrlState())\r\n\r\n\tuseMountEffect(() => history.listen(() => setUrlState(getUrlState())))\r\n\r\n\treturn [urlState, setUrl] as const\r\n}\r\n","import { EffectCallback, useEffect } from \"react\"\r\n\r\nexport const useMountEffect = (fun: EffectCallback) => {\r\n\treturn useEffect(fun, [])\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css, jsx } from \"@emotion/react\"\r\nimport { Button } from \"../general/components/Button\"\r\nimport { DRFC } from \"../general/types\"\r\nimport About from \"./pages/about/About\"\r\nimport ImagesPage from \"./pages/imagesPage/ImagesPage\"\r\nimport WeatherPage from \"./pages/weatherPage/WeatherPage\"\r\nimport { CuriosityPage } from \"./tools/CuriosityPage\"\r\nimport { useUrlState } from \"./tools/url\"\r\n\r\nconst pages = Object.values(CuriosityPage)\r\n\r\nconst CuriosityMars: DRFC = (props) => {\r\n\tconst [urlState, setUrl] = useUrlState()\r\n\r\n\tconst { page: currentPage } = urlState\r\n\tconst setPage = (page: CuriosityPage) => setUrl({ page })\r\n\r\n\tconst PAGES = {\r\n\t\t[CuriosityPage.ABOUT]: <About setPage={setPage} />,\r\n\t\t[CuriosityPage.IMAGES]: <ImagesPage />,\r\n\t\t[CuriosityPage.WEATHER]: <WeatherPage />,\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div css={styleContainer}>\r\n\t\t\t<div css={styleNavigation}>\r\n\t\t\t\t{pages.map((page) => (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\thandler={() => setPage(page)}\r\n\t\t\t\t\t\tstl={{\r\n\t\t\t\t\t\t\tmarginRight: 20,\r\n\t\t\t\t\t\t\tfontWeight: page === currentPage ? \"bold\" : \"normal\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tkey={page}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{page}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t{PAGES[currentPage]}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst verticleMargin = 20\r\n\r\nconst styleContainer = css({\r\n\tmaxWidth: 1150,\r\n\tmargin: \"auto\",\r\n\tmarginTop: verticleMargin,\r\n\tmarginBottom: verticleMargin,\r\n})\r\n\r\nconst styleNavigation = css({\r\n\tdisplay: \"flex\",\r\n})\r\n\r\nexport default CuriosityMars\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CuriosityMars from \"./curiosity\"\nimport \"./index.css\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<CuriosityMars />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}